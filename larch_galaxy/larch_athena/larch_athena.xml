<tool id="larch_athena" name="Larch Athena" version="@TOOL_VERSION@+galaxy@WRAPPER_VERSION@" python_template_version="3.5" profile="22.05" license="MIT">
    <description>generate Athena projects from XAFS data</description>
    <macros>
        <!-- version of underlying tool (PEP 440) -->
        <token name="@TOOL_VERSION@">0.9.66</token>
        <!-- version of this tool wrapper (integer) -->
        <token name="@WRAPPER_VERSION@">0</token>
        <!-- citation should be updated with every underlying tool version -->
        <!-- typical fields to update are version, month, year, and doi -->
        <token name="@TOOL_CITATION@">10.1088/1742-6596/430/1/012007</token>
    </macros>
    <creator>
        <person givenName="Patrick" familyName="Austin" url="https://github.com/patrick-austin" identifier="https://orcid.org/0000-0002-6279-7823"/>
        <organization url="https://muon-spectroscopy-computational-project.github.io/index.html" name="The Muon Spectroscopy Computational Project"/>
    </creator>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">xraylarch</requirement>
        <!-- xraydb 4.5.0 is compatible with sqlalchemy 2, but is not yet available on condaforge so pin it -->
        <requirement type="package" version="4.4.7">xraydb</requirement>
        <requirement type="package" version="1.4.46">sqlalchemy</requirement>
        <requirement type="package" version="3.5.2">matplotlib</requirement>
    </requirements>
    <required_files>
        <include type="literal" path="larch_athena.py"/>
    </required_files>
    <command detect_errors="exit_code"><![CDATA[
        mkdir out edge flat
        && python '${__tool_directory__}/larch_athena.py' '$dat_file' '$plot_graph' '$dat_file.extension'
    ]]></command>
    <inputs>
        <param name="dat_file" type="data" format="txt, zip" label="XAFS data file" help="Normalised X-ray Absorption Fine Structure (XAFS) data, generated by DAWN. Accepts individual file(s) or a zip."/>
        <param name="plot_graph" type="boolean" label="Plot graph" help="Whether to plot the pre/post edge fitting and the normalised xμ data."/>
    </inputs>
    <outputs>
        <data name="athena_project_file" format="binary" from_work_dir="out.prj" label="Athena project of ${dat_file.name}">
            <filter>dat_file.extension!="zip"</filter>
        </data>
        <data name="edge_plot" format="png" from_work_dir="edge.png" label="Edge fitting of ${dat_file.name}">
            <filter>dat_file.extension!="zip"</filter>
            <filter>plot_graph</filter>
        </data>
        <data name="flat_plot" format="png" from_work_dir="flat.png" label="Flattened plot of ${dat_file.name}">
            <filter>dat_file.extension!="zip"</filter>
            <filter>plot_graph</filter>
        </data>
        <collection name="athena_project_file_collection" format="binary" type="list" label="Athena projects of ${dat_file.name}">
            <discover_datasets pattern="__name_and_ext__" directory="out"/>
            <filter>dat_file.extension=="zip"</filter>
        </collection>
        <collection name="edge_plot_collection" format="png" type="list" label="Edge fittings of ${dat_file.name}">
            <discover_datasets pattern="__name_and_ext__" directory="edge"/>
            <filter>dat_file.extension=="zip"</filter>
            <filter>plot_graph</filter>
        </collection>
        <collection name="flat_plot_collection" format="png" type="list" label="Flattened plots of ${dat_file.name}">
            <discover_datasets pattern="__name_and_ext__" directory="flat"/>
            <filter>dat_file.extension=="zip"</filter>
            <filter>plot_graph</filter>
        </collection>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="dat_file" value="test.xmu"/>
            <output name="athena_project_file">
                <assert_contents>
                    <has_size value="5366" delta="10"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="3">
            <param name="dat_file" value="test.xmu"/>
            <param name="plot_graph" value="true"/>
            <output name="athena_project_file">
                <assert_contents>
                    <has_size value="5366" delta="10"/>
                </assert_contents>
            </output>
            <output name="edge_plot">
                <assert_contents>
                    <has_size value="53887" delta="20"/>
                </assert_contents>
            </output>
            <output name="flat_plot">
                <assert_contents>
                    <has_size value="40606" delta="20"/>
                </assert_contents>
            </output>
        </test>
        <test expect_num_outputs="3">
            <param name="dat_file" value="test.zip"/>
            <param name="plot_graph" value="true"/>
            <output_collection name="athena_project_file_collection" type="list" count="2"/>
            <output_collection name="edge_plot_collection" type="list" count="2"/>
            <output_collection name="flat_plot_collection" type="list" count="2"/>
        </test>
    </tests>
    <help><![CDATA[
        Using Larch, create an Athena project file from the input X-ray Absorption Fine Structure (XAFS) data file.
        This renames the `xmu` column of the data to `mu`.
        If column names are not present, then the first column is treated as `energy` and the second as `mu`.

        Optionally, plot the xμ data along with pre and post edge fitting lines for visual inspection. 
    ]]></help>
    <citations>
        <citation type="doi">@TOOL_CITATION@</citation>
        <citation type="doi">10.1107/S0909049505012719</citation>
    </citations>
</tool>